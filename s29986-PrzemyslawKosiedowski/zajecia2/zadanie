W opisie basha (man) przeczytac opis polecenia wewnetrznego umask i wyprobowac
jego dzialanie sprawdzajac, a nastepnie zmieniajac swoja maske trybu pliku i
tworzac za kazdym razem nowe pliki (przy uzyciu polecenia touch plik), a
pozniej sprawdzajac uzyskane uprawnienia dostepu do nich (polecenie ls -l).
Jaka operacja logiczna na bitach domyslnych uprawnien dostepu oraz maski
jest wykonywana?

Wykonanie: umask 0022; touch p1; umask 0427; touch p2; umask 0242; touch p3
Wynik:
-rw-r--r-- dla p1
--w-r----- dla p2
-r---w-r-- dla p3
Wniosek:
Polecenie umask sluzy do ustawiania domyslnej maski dla tworzenia plikow i 
katalogow. Dziala tylko dla aktualnie zalogowanego uzytkownika i mozna
zmieniac tylko swoja maske. Zakonczenie sesji sprawia, ze nastepnym razem
po zalogowaniu maska bedzie miala ponownie przypisana wartosc domyslna
(oktalnie 0022). Wartosc umask wyraza uprawnienia, ktore maja zostac
wykluczone w trakcie tworzenia nowych plikow i katalogow, dla ktorych domyslne
bity uprawnien to 0666 (pliki) i 0777 (katalogi). Podczas nadawania uprawnien
zachodzi operacja logiczna AND pomiedzy wartosciami domyslnymi plikow lub
katalogow i negacja wartosci umask (A&&(!B)):

110 110 110	bity domyslne dla plikow (666)
	
 A   N   D 	operacja, ktora zachodzi

111 101 101	zanegowane bity umask (dla 022)

=== === ===

110 100 100	wynik operacji (644) (dla plikow bity wykonania sa pomijane)

Zrodla, z ktorych skorzystalem:
1. man
2. https://wiki.archlinux.org/title/umask
3. https://en.wikipedia.org/wiki/Bitwise_operation
4. https://en.wikipedia.org/wiki/Material_nonimplicatio

Szczerze to bylo tego o wiele wiecej, ale dopiero na tych stronach zrozumialem
w miare ten temat (a przynajmniej mam taka nadzieje, jak nie to zapytam sie
Pana na nastepnym zjezdzie, bo spedzilem przy tym zadaniu dobre 3h bledzac po
Internecie i nie wiem, czy bym cos wiecej znalazl).

